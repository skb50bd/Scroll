version: '3'

services:
  api:
    build:
      context: .
      dockerfile: ./src/Api/Dockerfile
    image: scroll-api:${Tag:-latest}
    container_name: api
    expose:
      - 80
    ports:
      - 5080:80
    environment:
      - ASPNETCORE_HTTP_PORTS=80
      - ConnectionStrings__ScrollDb=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    networks:
      - scroll-net
    depends_on:
      db:
        required: true
        condition: service_healthy
      minio:
        required: false
        condition: service_started

  db:
    container_name: db
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_PASSWORD
    user: ${POSTGRES_USER}
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - scroll-net
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 2s
      retries: 3

  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
    expose:
      - 9000
      - 9090
    ports:
      - 9000:9000
      - 9090:9090
    command: server /data --console-address ":9090"
    networks:
      - scroll-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 3

volumes:
  pgdata:
    driver: local
  minio-data:
    driver: local

networks:
  scroll-net:
    driver: bridge
