@page
@using Scroll.Service.Services
@model Scroll.Web.Areas.Admin.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products";
}

<div class="row">
    <div class="display-4 mb-3 col-6" style="margin-bottom: 10rem;">
        <a class="text-decoration-none text-black"
           asp-area="Admin"
           asp-page="/Products/Index">
            @ViewData["Title"]
        </a>
    </div>
    @if (Model?.Products?.Count is > 0)
    {
        <div class="col-6 my-auto">
            <a class="btn btn-outline-primary float-end"
               asp-page="./CreateOrEdit">
                New
            </a>
        </div>
    }
</div>

@if (Model?.Products?.Count is not > 0)
{
    <partial name="_LonelyHere" />
}
else
{
    <form asp-page="./Index"
            method="get"
            class="vstack gap-1">

        <div class="row">
            <input asp-for="@Model.PageSize"
                    name="pageSize"
                    value="@Model.PageSize"
                    hidden />

            <input asp-for="@Model.PageIndex"
                    name="pageIndex"
                    value="0"
                    hidden />

            <div class="col-sm-12 col-md-3 mb-1">
                <input asp-for="@Model.SearchString"
                        value="@Model.SearchString"
                        type="search"
                        placeholder="Title Filter"
                        class="form-control"
                        aria-label="Title Filter"
                        aria-describedby="searchButton" />
            </div>

            <div class="col-sm-12 col-md-3 mb-1">
                <select class="form-select"
                        asp-for="@Model.CategoryId">
                    <option value="" selected>
                        All Categories
                    </option>

                    @foreach(var category in Model.Categories.Items)
                    {
                        <option value="@category.Id">
                            @category.Name
                        </option>
                    }
                </select>
            </div>

            <div class="col-sm-12 col-md-3 mb-1">
                <select class="form-select"
                        asp-for="@Model.SortBy">

                    <option selected disabled>
                        Sort By
                    </option>

                    @foreach(var sortBy in Enum.GetValues(typeof(ProductSortOrder)).Cast<ProductSortOrder>())
                    {
                        <option value="@sortBy">
                            @sortBy.ToSpaced()
                        </option>
                    }
                </select>
            </div>

            <div class="col-sm-12 col-md-3 mb-1">
                <button class="btn btn-success"
                        type="submit"
                        id="searchButton">
                    Go
                </button>
            </div>
        </div>
    </form>

    <div class="table-responsive mt-2">
        <table class="table table-hover table-striped">
            <thead class="table-dark">
                <tr>
                    <th scope="col">Title</th>
                    <th scope="col">Link</th>
                    <th scope="col">Clicks</th>
                    <th scope="col">Favorites</th>
                    <th scope="col">Categories</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Products.Items)
                {
                    <tr>
                        <th scope="row">@product.Title</th>
                        <td>
                            <a href="@product.Link">
                                @product.Link?.CleanLink().Glimpse(15)
                            </a>
                        </td>
                        <td>@product.ClickCount</td>
                        <td>@product.FavoriteCount</td>
                        <td>@product.Categories.Count</td>
                        <td>
                            <a asp-page="./CreateOrEdit"
                               asp-route-id="@product.Id"
                               class="link-primary text-decoration-none">
                                Edit
                            </a>

                            &nbsp;

                            <a href="#delete"
                               class="link-danger text-decoration-none js-delete-action"
                               data-delete-url="@Url.Action("Delete", "Product", new { productId = product.Id })"
                               data-redirect-url="@Url.Page("./Index")">
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @*Pagination*@

    var prevButton = Model.Products.HasPreviousPage ? "" : "disabled";
    var nextButton = Model.Products.HasNextPage ? "" : "disabled";

    <nav aria-label="pagination">
        <ul class="pagination">

            <li class="page-item @prevButton">
                <a asp-route-pageSize="@Model.Products.PageSize"
                   asp-route-pageIndex="0"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-sortBy="@Model.SortBy"
                   asp-route-categoryId="@Model.CategoryId"
                   class="page-link">First</a>
            </li>

            <li class="page-item @prevButton">
                <a asp-route-pageSize="@Model.Products.PageSize"
                   asp-route-pageIndex="@(Model.Products.PageIndex - 1)"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-sortBy="@Model.SortBy"
                   asp-route-categoryId="@Model.CategoryId"
                   area-label="Previous"
                   class="page-link">
                    <span aria-hidden="true">
                        &laquo;
                    </span>
                </a>
            </li>
            @{
                var i = Model.Products.PageIndex - 3;
                while (i <= -1) { i++; }
            }

            @while (i < Model.Products.PageIndex)
            {
                <li class="page-item">
                    <a asp-route-pageSize="@Model.Products.PageSize"
                       asp-route-pageIndex="@i"
                       asp-route-searchString="@Model.SearchString"
                       asp-route-sortBy="@Model.SortBy"
                       asp-route-categoryId="@Model.CategoryId"
                       class="page-link">
                        @(i + 1)
                    </a>
                </li>
                i++;
            }

            <li class="page-item active" aria-current="page">
                <a asp-route-pageSize="@Model.Products.PageSize"
                   asp-route-pageIndex="@Model.Products.PageIndex"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-sortBy="@Model.SortBy"
                   asp-route-categoryId="@Model.CategoryId"
                   class="page-link">
                    @(Model.PageIndex + 1)
                    <span class="visually-hidden">(current)</span>
                </a>
            </li>


            @for (i = Model.PageIndex + 1; i <= Model.Products.LastPageIndex && i <= Model.PageIndex + 3; i++)
            {
                <li class="page-item">
                    <a asp-page="./Index"
                       asp-route-pageSize="@Model.Products.PageSize"
                       asp-route-pageIndex="@i"
                       asp-route-searchString="@Model.SearchString"
                       asp-route-sortBy="@Model.SortBy"
                       asp-route-categoryId="@Model.CategoryId"
                       class="page-link">
                        @(i + 1)
                    </a>
                </li>
            }

            <li class="page-item @nextButton">
                <a asp-page="./Index"
                   asp-route-pageSize="@Model.Products.PageSize"
                   asp-route-pageIndex="@(Model.PageIndex + 1)"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-sortBy="@Model.SortBy"
                   asp-route-categoryId="@Model.CategoryId"
                   area-label="Next"
                   class="page-link">
                   <span aria-hidden="true">
                       &raquo;
                    </span>
               </a>
            </li>

            <li class="page-item @nextButton">
                <a asp-page="./Index"
                   asp-route-pageSize="@Model.Products.PageSize"
                   asp-route-pageIndex="@Model.Products.LastPageIndex"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-sortBy="@Model.SortBy"
                   asp-route-categoryId="@Model.CategoryId"
                   class="page-link">Last</a>
            </li>
        </ul>
    </nav>

    <p class="text-center">
        Showing @Model.Products.Count of total @Model.Products.TotalCount results
    </p>

}